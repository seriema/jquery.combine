(function(e){typeof define=="function"&&define.amd?define("difference",e):e(jQuery)})(function(e){e.difference=function(t){var n=e.extend({},t),r=[].slice.call(arguments,1),i=r.length;while(i--){var s=r[i];for(var o in s)s.hasOwnProperty(o)&&delete n[o]}return n}}),function(e){typeof define=="function"&&define.amd?define("intersection",e):e(jQuery)}(function(e){e.intersection=function(){var t=e.extend({},arguments[0]),n=[].slice.call(arguments,1),r=n.length;while(r--){var i=n[r];for(var s in t)i.hasOwnProperty(s)&&i[s]?t[s]=i[s]:delete t[s]}return t}}),function(e){typeof define=="function"&&define.amd?define("union",e):e(jQuery)}(function(e){e.union=function(){var t=e.extend({},arguments[0]),n=[].slice.call(arguments,1),r=n.length;for(var i=0;i<r;i++){var s=n[i];for(var o in s)s.hasOwnProperty(o)&&(t.hasOwnProperty(o)?Array.isArray(t[o])?t[o].push(s[o]):t[o]=[t[o],s[o]]:t[o]=s[o])}return t}}),function(e){typeof define=="function"&&define.amd?define("symmetric",["difference","union"],e):e(jQuery)}(function(e){e.symmetric=function(){var t={},n=arguments.length;for(var r=0;r<n;r++){var i=arguments[r];for(var s=0;s<n;s++){if(s===r)continue;var o=arguments[s];i=e.difference(i,o)}t=e.union(t,i)}return t}}),require(["difference","intersection","symmetric","union"]),define("main",function(){});